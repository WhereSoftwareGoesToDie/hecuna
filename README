hecuna
======

hecuna is a clustered-datastore loadtesting/benchmarking tool. At the 
moment it's alpha-quality, but still usable if you don't mind a little 
pain. Written by Sharif Olorin/fractalcat as an aid in performance tuning. 

It's built around a record generator that produces data resembling
single nucleotide polymorphisms (SNPs), as IMO it's a pretty typical
usecase for large clustered databases and KVSes, and is easily
extensible to map-reduce and aggregation benchmarking. It uses random
strings as document values, and shorter random strings as keys.

backends
========

hecuna currently supports benchmarks against Cassandra and
Elasticsearch. If you want to add a new backend, define a type
implementing the StorageEngine interface (look at cassandra.go for an
example) and update the flag parser in hecuna.go.

building
========

You'll need a working go 1.1 installation, plus dependencies (below).
Once everything is in place (and your GOPATH is set up correctly), all 
you need is `go build`. That'll give you a statically-linked binary 
runnable on any machine with the same architecture (binary format and 
word size). 

dependencies
============

 - gossie (https://github.com/carloscm/gossie/) 
 - thrift4go (https://github.com/pomack/thrift4go)
 - elastigo (https://github.com/mattbaird/elastigo)

Versions of these dependencies verified to build with hecuna have been forked and 
included as submodules; use the authors' HEAD at your own risk.

usage
=====

`hecuna -hosts="host0:9160,host1:9610"  -rowcount=10000 cassandra`

`hecuna -index=snps  -rowcount=10000 elasticsearch`

